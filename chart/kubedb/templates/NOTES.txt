Verify the application is working by running these commands:
{{if contains "NodePort" .Values.service.type }}
  NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "kubedb.fullname" . }})
  curl http://$NODE_IP:$NODE_PORT{{ .Values.metricsPath }}
{{- else if contains "LoadBalancer" .Values.service.type }}
  # NOTE: It may take a few minutes for the LoadBalancer IP to be available.
  SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "kubedb.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  curl http://$SERVICE_IP:{{ .Values.service.port }}{{ .Values.metricsPath }}
{{- else if contains "ClusterIP" .Values.service.type }}
  kubectl port-forward service/{{ include "kubedb.fullname" . }} {{ .Values.service.port }}
  curl http://127.0.0.1:{{ .Values.service.port }}{{ .Values.metricsPath }}
{{- end }}
